{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anne\\\\file-management-frontend\\\\src\\\\components\\\\DirectoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport NewDirectoryForm from './NewDirectoryForm';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DirectoryList() {\n  _s();\n  const [directories, setDirectories] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  useEffect(() => {\n    fetch('http://localhost:8080/api/directories/').then(response => response.json()).then(data => setDirectories(data)).catch(error => console.error('Error fetching directories:', error));\n  }, []);\n  const handleNewDirectory = directory => {\n    fetch('http://localhost:8080/api/directories/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(directory)\n    }).then(response => response.json()).then(data => {\n      setDirectories([...directories, data]);\n      setShowForm(false);\n    }).catch(error => console.error('Failed to create directory:', error));\n  };\n  const handleDeleteDirectory = directoryId => {\n    fetch(`http://localhost:8080/api/directories/${directoryId}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (response.ok) {\n        setDirectories(directories.filter(directory => directory.id !== directoryId));\n        alert(\"Directory deleted successfully.\");\n        navigate('/'); // Navigate to root or a safe location after deletion\n      } else {\n        alert(\"Failed to delete directory. It might not be empty.\");\n      }\n    }).catch(error => console.error('Error deleting directory:', error));\n  };\n  const handleDirectoryClick = id => {\n    navigate(`/directory/${id}`); // Navigate to FileList for clicked directory\n  };\n  const handleNavigateParent = parentId => {\n    if (parentId) {\n      navigate(`/directory/${parentId}`);\n    } else {\n      navigate('/'); // Navigate to root if there's no parent (i.e., already at root level)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-center mb-4\",\n      children: \"Directories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(!showForm),\n      className: \"mb-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n      children: showForm ? 'Cancel' : 'Create New Directory'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(NewDirectoryForm, {\n      onSubmit: handleNewDirectory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc pl-5\",\n      children: directories.map(directory => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"text-blue-500 hover:text-blue-700 cursor-pointer\",\n        onClick: () => handleDirectoryClick(directory.id),\n        children: [\" \", directory.name]\n      }, directory.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(DirectoryList, \"InQXzvQiS6KG5d2p810Wv5/p3vc=\", false, function () {\n  return [useNavigate];\n});\n_c = DirectoryList;\nexport default DirectoryList;\nvar _c;\n$RefreshReg$(_c, \"DirectoryList\");","map":{"version":3,"names":["React","useEffect","useState","NewDirectoryForm","useNavigate","jsxDEV","_jsxDEV","DirectoryList","_s","directories","setDirectories","showForm","setShowForm","navigate","fetch","then","response","json","data","catch","error","console","handleNewDirectory","directory","method","headers","body","JSON","stringify","handleDeleteDirectory","directoryId","ok","filter","id","alert","handleDirectoryClick","handleNavigateParent","parentId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","map","name","_c","$RefreshReg$"],"sources":["C:/Users/Anne/file-management-frontend/src/components/DirectoryList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport NewDirectoryForm from './NewDirectoryForm';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n\r\nfunction DirectoryList() {\r\n  const [directories, setDirectories] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/api/directories/')\r\n      .then(response => response.json())\r\n      .then(data => setDirectories(data))\r\n      .catch(error => console.error('Error fetching directories:', error));\r\n  }, []);\r\n\r\n  const handleNewDirectory = (directory) => {\r\n    fetch('http://localhost:8080/api/directories/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(directory)\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setDirectories([...directories, data]);\r\n      setShowForm(false);\r\n    })\r\n    .catch(error => console.error('Failed to create directory:', error));\r\n  };\r\n\r\n  const handleDeleteDirectory = (directoryId) => {\r\n    fetch(`http://localhost:8080/api/directories/${directoryId}`, {\r\n      method: 'DELETE'\r\n    })\r\n    .then(response => {\r\n      if (response.ok) {\r\n        setDirectories(directories.filter(directory => directory.id !== directoryId));\r\n        alert(\"Directory deleted successfully.\");\r\n        navigate('/'); // Navigate to root or a safe location after deletion\r\n      } else {\r\n        alert(\"Failed to delete directory. It might not be empty.\");\r\n      }\r\n    })\r\n    .catch(error => console.error('Error deleting directory:', error));\r\n  };\r\n  \r\n\r\n  const handleDirectoryClick = (id) => {\r\n    navigate(`/directory/${id}`); // Navigate to FileList for clicked directory\r\n  };\r\n\r\n  const handleNavigateParent = (parentId) => {\r\n    if (parentId) {\r\n      navigate(`/directory/${parentId}`);\r\n    } else {\r\n      navigate('/'); // Navigate to root if there's no parent (i.e., already at root level)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-5\">\r\n      <h1 className=\"text-2xl font-bold text-center mb-4\">Directories</h1>\r\n      <button\r\n        onClick={() => setShowForm(!showForm)}\r\n        className=\"mb-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n      >\r\n        {showForm ? 'Cancel' : 'Create New Directory'}\r\n      </button>\r\n      {showForm && <NewDirectoryForm onSubmit={handleNewDirectory} />}\r\n      <ul className=\"list-disc pl-5\">\r\n        {directories.map(directory => (\r\n          <li key={directory.id} className=\"text-blue-500 hover:text-blue-700 cursor-pointer\"\r\n              onClick={() => handleDirectoryClick(directory.id)}> {/* Add onClick handler */}\r\n            {directory.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DirectoryList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}