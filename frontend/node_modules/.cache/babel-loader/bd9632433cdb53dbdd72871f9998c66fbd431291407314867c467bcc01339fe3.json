{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anne\\\\file-management-frontend\\\\src\\\\components\\\\DirectoryList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DirectoryList() {\n  _s();\n  const [directories, setDirectories] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8080/api/directories/').then(response => response.json()).then(data => setDirectories(data)).catch(error => console.error('Error fetching directories:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-center mb-4\",\n      children: \"Directories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc pl-5\",\n      children: directories.map(directory => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"text-blue-500 hover:text-blue-700 cursor-pointer\",\n        children: directory.name\n      }, directory.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(DirectoryList, \"HEyXV/XqY2E8yQJ9drXfthN/K7k=\");\n_c = DirectoryList;\nexport default DirectoryList;\nvar _c;\n$RefreshReg$(_c, \"DirectoryList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DirectoryList","_s","directories","setDirectories","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","directory","name","id","_c","$RefreshReg$"],"sources":["C:/Users/Anne/file-management-frontend/src/components/DirectoryList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction DirectoryList() {\r\n  const [directories, setDirectories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/api/directories/')\r\n      .then(response => response.json())\r\n      .then(data => setDirectories(data))\r\n      .catch(error => console.error('Error fetching directories:', error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container mx-auto mt-5\">\r\n      <h1 className=\"text-2xl font-bold text-center mb-4\">Directories</h1>\r\n      <ul className=\"list-disc pl-5\">\r\n        {directories.map(directory => (\r\n          <li key={directory.id} className=\"text-blue-500 hover:text-blue-700 cursor-pointer\">\r\n            {directory.name}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DirectoryList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,wCAAwC,CAAC,CAC5CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,cAAc,CAACK,IAAI,CAAC,CAAC,CAClCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKa,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCd,OAAA;MAAIa,SAAS,EAAC,qCAAqC;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpElB,OAAA;MAAIa,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC3BX,WAAW,CAACgB,GAAG,CAACC,SAAS,iBACxBpB,OAAA;QAAuBa,SAAS,EAAC,kDAAkD;QAAAC,QAAA,EAChFM,SAAS,CAACC;MAAI,GADRD,SAAS,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEjB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAAChB,EAAA,CAtBQD,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAwBtB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}